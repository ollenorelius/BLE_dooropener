
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_CONFIG, espi_config, int, struct device *, dev, struct espi_cfg *, cfg)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_GET_CHANNEL_STATUS, espi_get_channel_status, bool, struct device *, dev, enum espi_channel, ch)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_READ_REQUEST, espi_read_request, int, struct device *, dev, struct espi_request_packet, req)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_WRITE_REQUEST, espi_write_request, int, struct device *, dev, struct espi_request_packet, req)

K_SYSCALL_DECLARE3(K_SYSCALL_ESPI_SEND_VWIRE, espi_send_vwire, int, struct device *, dev, enum espi_vwire_signal, signal, u8_t, level)

K_SYSCALL_DECLARE3(K_SYSCALL_ESPI_RECEIVE_VWIRE, espi_receive_vwire, int, struct device *, dev, enum espi_vwire_signal, signal, u8_t *, level)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_SEND_OOB, espi_send_oob, int, struct device *, dev, struct espi_oob_packet, pckt)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_RECEIVE_OOB, espi_receive_oob, int, struct device *, dev, struct espi_oob_packet, pckt)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_READ_FLASH, espi_read_flash, int, struct device *, dev, struct espi_flash_packet, pckt)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_WRITE_FLASH, espi_write_flash, int, struct device *, dev, struct espi_flash_packet, pckt)

K_SYSCALL_DECLARE2(K_SYSCALL_ESPI_FLASH_ERASE, espi_flash_erase, int, struct device *, dev, struct espi_flash_packet, pckt)

#ifdef __cplusplus
}
#endif

#endif
